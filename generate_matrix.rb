# un-solvable
# SUDOKU = '000800042000001070900002003007000050100030004040000800400900006050200010280006000'

# diabolical
# SUDOKU = '160379048000000000030481070310507089580602037000000000000000000040020050003964800'
# SUDOKU = '020001089108003004060700000000000200500607003003000000000004030700900401940100070'
# SUDOKU = '140060300050000000300087204000000056002000700780000000501690002000000060006010049' # pass
# SUDOKU = '200300500050040000009000041600420805000000000904056007420000900000010070006005003'
# SUDOKU = '020001089108003004060700000000000200500607003003000000000004030700900401940100070'
# SUDOKU = '100008309060040020209000000000500807000706000706003000000000705050010040904800006'

# 2's in box5 not clearing
#SUDOKU = '006080100080246070200050008002408600000000000900010003020000080400901006709060301'

# very hard
# SUDOKU = '007000500050109060300050002500000007004000800890000016400060008002000600605743901'
# SUDOKU = '200308406100000000000607008000000209070090080602000000700903000000000003906705001'
# SUDOKU = '006030800000408000400050003102000906790060032000020000524000798031000650600040001'

# hard
# SUDOKU = '400305000006000007580000010120003000300408006000700043010000059900000200000906001'

# something wrong with hidden candidates... :one remaining not working  
# SUDOKU = '200050009100709003009000600000203000500491007003080200004000700720000036830070012'

# moderate
#  row7 [2,7], [1,2,7], and [1,2,7] does not clear col2 and col5
 SUDOKU = '007300509300002000400080003600050030003000600090060002800030005000600004706001300'

# mild
# SUDOKU = '200147008008000600000060000100503004730020065005000200001604800600982001903000406'

class Matrix
  attr_reader :sudoku

  def fill_cell(value)
    if value == '0'
      return [1, 2, 3, 4, 5, 6, 7, 8, 9]
    else
      value.to_i
    end
  end

  def generate_matrix(sudoku)
    puzzle, row = [], []
    sudoku.each_char do |char|

      row << fill_cell(char)
      
      if row.length == 9
        puzzle << row
        row = []
      end
    end
    puzzle
  end
end
